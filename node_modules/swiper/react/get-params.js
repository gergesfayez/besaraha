import Swiper from 'swiper';
import { isObject, extend } from './utils.js';
import { paramsList } from './params-list.js';

function getParams(obj) {
  if (obj === void 0) {
    obj = {};
  }

  const params = {
    on: {}
  };
  const events = {};
  const passedParams = {};
  extend(params, Swiper.defaults);
  extend(params, Swiper.extendedDefaults);
  params._emitClasses = true;
  params.init = false;
<<<<<<< HEAD:node_modules/swiper/react/get-params.js
  const rest = {};
  const allowedParams = paramsList.map(key => key.replace(/_/, ''));
  Object.keys(obj).forEach(key => {
=======
  var rest = {};
  var allowedParams = paramsList.map(function (key) {
    return key.replace(/_/, '');
  });
  Object.keys(obj).forEach(function (key) {
>>>>>>> 3ef62278f65874bb410451faea57be42d35419cf:node_modules/swiper/esm/react/get-params.js
    if (allowedParams.indexOf(key) >= 0) {
      if (isObject(obj[key])) {
        params[key] = {};
        passedParams[key] = {};
        extend(params[key], obj[key]);
        extend(passedParams[key], obj[key]);
      } else {
        params[key] = obj[key];
        passedParams[key] = obj[key];
      }
    } else if (key.search(/on[A-Z]/) === 0 && typeof obj[key] === 'function') {
      events[`${key[2].toLowerCase()}${key.substr(3)}`] = obj[key];
    } else {
      rest[key] = obj[key];
    }
  });
<<<<<<< HEAD:node_modules/swiper/react/get-params.js
  ['navigation', 'pagination', 'scrollbar'].forEach(key => {
    if (params[key] === true) params[key] = {};
    if (params[key] === false) delete params[key];
=======
  ['navigation', 'pagination', 'scrollbar'].forEach(function (key) {
    if (params[key] === true) params[key] = {};
>>>>>>> 3ef62278f65874bb410451faea57be42d35419cf:node_modules/swiper/esm/react/get-params.js
  });
  return {
    params,
    passedParams,
    rest,
    events
  };
}

export { getParams };